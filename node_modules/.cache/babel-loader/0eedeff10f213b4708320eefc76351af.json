{"ast":null,"code":"var _jsxFileName = \"/home/devtaiye/Desktop/REACT PRACTISE/React Router Project/src/components/comments/Comments.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = () => {};\n  let comments;\n  if (status === 'pending') {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n  if (status === 'completed' && loadedComments && loadedComments.length) return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.quoteId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n_s(Comments, \"oTYmLyIqgQIy/H9X8mxEcyELwnw=\", false, function () {\n  return [useParams, useHttp];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","useParams","useHttp","getAllComments","LoadingSpinner","classes","NewCommentForm","Comments","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","data","loadedComments","startAddCommentHandler","addedCommentHandler","comments","length"],"sources":["/home/devtaiye/Desktop/REACT PRACTISE/React Router Project/src/components/comments/Comments.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport useHttp from '../../hooks/use-http'\nimport { getAllComments } from '../../lib/api'\nimport LoadingSpinner from '../UI/LoadingSpinner'\n\nimport classes from './Comments.module.css'\nimport NewCommentForm from './NewCommentForm'\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false)\n  const params = useParams()\n\n  const { quoteId } = params\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments)\n\n  useEffect(() => {\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true)\n  }\n\n  const addedCommentHandler = () => {}\n\n  let comments\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    )\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length)\n    return (\n      <section className={classes.comments}>\n        <h2>User Comments</h2>\n        {!isAddingComment && (\n          <button className='btn' onClick={startAddCommentHandler}>\n            Add a Comment\n          </button>\n        )}\n        {isAddingComment && (\n          <NewCommentForm\n            quoteId={params.quoteId}\n            onAddedComment={addedCommentHandler}\n          />\n        )}\n        <p>Comments...</p>\n      </section>\n    )\n}\n\nexport default Comments\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,cAAc,MAAM,sBAAsB;AAEjD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAAA;AAE7C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMW,MAAM,GAAGT,SAAS,EAAE;EAE1B,MAAM;IAAEU;EAAQ,CAAC,GAAGD,MAAM;EAE1B,MAAM;IAAEE,WAAW;IAAEC,MAAM;IAAEC,IAAI,EAAEC;EAAe,CAAC,GAAGb,OAAO,CAACC,cAAc,CAAC;EAE7EH,SAAS,CAAC,MAAM;IACdY,WAAW,CAACD,OAAO,CAAC;EACtB,CAAC,EAAE,CAACC,WAAW,EAAED,OAAO,CAAC,CAAC;EAE1B,MAAMK,sBAAsB,GAAG,MAAM;IACnCP,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMQ,mBAAmB,GAAG,MAAM,CAAC,CAAC;EAEpC,IAAIC,QAAQ;EAEZ,IAAIL,MAAM,KAAK,SAAS,EAAE;IACxBK,QAAQ,gBACN;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAErB;EACH;EAEA,IAAIL,MAAM,KAAK,WAAW,IAAIE,cAAc,IAAIA,cAAc,CAACI,MAAM,EACnE,oBACE;IAAS,SAAS,EAAEd,OAAO,CAACa,QAAS;IAAA,wBACnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,EACrB,CAACV,eAAe,iBACf;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAEQ,sBAAuB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGzD,EACAR,eAAe,iBACd,QAAC,cAAc;MACb,OAAO,EAAEE,MAAM,CAACC,OAAQ;MACxB,cAAc,EAAEM;IAAoB;MAAA;MAAA;MAAA;IAAA,QAEvC,eACD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB;EAAA;IAAA;IAAA;IAAA;EAAA,QACV;AAEhB,CAAC;AAAA,GA9CKV,QAAQ;EAAA,QAEGN,SAAS,EAI8BC,OAAO;AAAA;AAAA,KANzDK,QAAQ;AAgDd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}