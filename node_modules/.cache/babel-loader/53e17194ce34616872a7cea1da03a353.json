{"ast":null,"code":"var _jsxFileName = \"/home/devtaiye/Desktop/REACT PRACTISE/React Router Project/src/pages/QuoteDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useParams, Route, Link, useMatch, Routes } from 'react-router-dom';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\n\n// const DUMMY_QUOTES = [\n//   { id: 'q1', author: 'Aisha', text: 'Learning React is fun!' },\n//   { id: 'q2', author: 'Nurudeen', text: 'Learning NextJs is great!' },\n// ]\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuoteDetail = () => {\n  _s();\n  const match = useMatch();\n  const params = useParams();\n\n  // console.log(match)\n\n  // const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId)\n\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  // if (!quote) {\n  //   return <p>No Quote found!</p>\n  // }\n\n  if (!loadedQuote.text) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: loadedQuote.text,\n      author: loadedQuote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: match.path,\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centered\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"btn--flat\",\n            to: `/quotes/${params.quoteId}/comments`,\n            children: \"Load Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/comments`,\n        children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(QuoteDetail, \"n3H2Pg84YN4XImYLFvY7uZjLyKw=\", false, function () {\n  return [useMatch, useParams, useHttp];\n});\n_c = QuoteDetail;\nexport default QuoteDetail;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["React","useEffect","useParams","Route","Link","useMatch","Routes","useHttp","getSingleQuote","Comments","HighlightedQuote","LoadingSpinner","QuoteDetail","match","params","quoteId","sendRequest","status","data","loadedQuote","error","text","author","path"],"sources":["/home/devtaiye/Desktop/REACT PRACTISE/React Router Project/src/pages/QuoteDetail.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useParams, Route, Link, useMatch, Routes } from 'react-router-dom'\nimport useHttp from '../hooks/use-http'\nimport { getSingleQuote } from '../lib/api'\nimport Comments from '../components/comments/Comments'\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\n\n// const DUMMY_QUOTES = [\n//   { id: 'q1', author: 'Aisha', text: 'Learning React is fun!' },\n//   { id: 'q2', author: 'Nurudeen', text: 'Learning NextJs is great!' },\n// ]\n\nconst QuoteDetail = () => {\n  const match = useMatch()\n  const params = useParams()\n\n  // console.log(match)\n\n  // const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId)\n\n  const { quoteId } = params\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true)\n\n  useEffect(() => {\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId])\n\n  if (status === 'pending') {\n    return (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    )\n  }\n\n  if (error) {\n    return <p className='centered'>{error}</p>\n  }\n  // if (!quote) {\n  //   return <p>No Quote found!</p>\n  // }\n\n  if (!loadedQuote.text) {\n    return <p>No Quote found!</p>\n  }\n  return (\n    <>\n      {/* <HighlightedQuote text={quote.text} author={quote.author} /> */}\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      {/* <Route path={`/quotes/${params.quoteId}`}> */}\n      <Routes>\n        <Route path={match.path} exact>\n          <div className='centered'>\n            <Link\n              className='btn--flat'\n              to={`/quotes/${params.quoteId}/comments`}\n            >\n              {/* <Link className='btn--flat' to={`${match.url}/comments`}> */}\n              Load Comments\n            </Link>\n          </div>\n        </Route>\n        {/* </Routes> */}\n        {/* <Route path={`/quotes/${params.quoteId}/comments`}> */}\n        {/* <Routes> */}\n        <Route path={`${match.path}/comments`}>\n          <Comments />\n        </Route>\n      </Routes>\n    </>\n  )\n}\n\nexport default QuoteDetail\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,EAAEC,KAAK,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAC3E,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,cAAc,QAAQ,YAAY;AAC3C,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,gBAAgB,MAAM,uCAAuC;AACpE,OAAOC,cAAc,MAAM,iCAAiC;;AAE5D;AACA;AACA;AACA;AAAA;AAAA;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAMC,KAAK,GAAGR,QAAQ,EAAE;EACxB,MAAMS,MAAM,GAAGZ,SAAS,EAAE;;EAE1B;;EAEA;;EAEA,MAAM;IAAEa;EAAQ,CAAC,GAAGD,MAAM;EAE1B,MAAM;IACJE,WAAW;IACXC,MAAM;IACNC,IAAI,EAAEC,WAAW;IACjBC;EACF,CAAC,GAAGb,OAAO,CAACC,cAAc,EAAE,IAAI,CAAC;EAEjCP,SAAS,CAAC,MAAM;IACde,WAAW,CAACD,OAAO,CAAC;EACtB,CAAC,EAAE,CAACC,WAAW,EAAED,OAAO,CAAC,CAAC;EAE1B,IAAIE,MAAM,KAAK,SAAS,EAAE;IACxB,oBACE;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACd;EAEV;EAEA,IAAIG,KAAK,EAAE;IACT,oBAAO;MAAG,SAAS,EAAC,UAAU;MAAA,UAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAC5C;EACA;EACA;EACA;;EAEA,IAAI,CAACD,WAAW,CAACE,IAAI,EAAE;IACrB,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB;EAC/B;EACA,oBACE;IAAA,wBAEE,QAAC,gBAAgB;MAAC,IAAI,EAAEF,WAAW,CAACE,IAAK;MAAC,MAAM,EAAEF,WAAW,CAACG;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAExE,QAAC,MAAM;MAAA,wBACL,QAAC,KAAK;QAAC,IAAI,EAAET,KAAK,CAACU,IAAK;QAAC,KAAK;QAAA,uBAC5B;UAAK,SAAS,EAAC,UAAU;UAAA,uBACvB,QAAC,IAAI;YACH,SAAS,EAAC,WAAW;YACrB,EAAE,EAAG,WAAUT,MAAM,CAACC,OAAQ,WAAW;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAIpC;UAAA;UAAA;UAAA;QAAA;MACH;QAAA;QAAA;QAAA;MAAA,QACA,eAIR,QAAC,KAAK;QAAC,IAAI,EAAG,GAAEF,KAAK,CAACU,IAAK,WAAW;QAAA,uBACpC,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACN;IAAA;MAAA;MAAA;MAAA;IAAA,QACD;EAAA,gBACR;AAEP,CAAC;AAAA,GAjEKX,WAAW;EAAA,QACDP,QAAQ,EACPH,SAAS,EAapBK,OAAO;AAAA;AAAA,KAfPK,WAAW;AAmEjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}